paramnames=c("Beta","rho","eta")
)
} -> mifs_local
# Iterated filtering diagnostics
mifs_local |>
traces() |>
melt() |>
ggplot(aes(x=iteration,y=value,group=.L1,color=factor(.L1)))+
geom_line()+
guides(color="none")+
facet_wrap(~name,scales="free_y")
# estimating the likelihood
foreach(mf=mifs_local,.combine=rbind,
.options.future=list(seed=900242057)
) %dofuture% {
evals <- replicate(10, logLik(pfilter(mf,Np=5000)))
ll <- logmeanexp(evals,se=TRUE)
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results
pairs(~loglik+Beta+eta+rho,data=results,pch=16)
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
set.seed(2062379496)
runif_design(
lower=c(Beta=5,rho=0.2,eta=0),
upper=c(Beta=80,rho=0.9,eta=1),
nseq=100 # change start points from 400 to 100
) -> guesses
mf1 <- mifs_local[[1]]
library(iterators)
foreach(guess=iter(guesses,"row"), .combine=rbind,
.options.future=list(seed=1270401374)
) %dofuture% {
mf1 |>
mif2(params=c(guess,fixed_params)) |>
mif2(Nmif=50) -> mf # change Nmif from 100 to 50
replicate(
10,
mf |> pfilter(Np=1500) |> logLik() # change Np from 5000 to 2000
) |>
logmeanexp(se=TRUE) -> ll
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
set.seed(2062379496)
runif_design(
lower=c(Beta=5,rho=0.2,eta=0),
upper=c(Beta=80,rho=0.9,eta=1),
nseq=200 # change start points from 400 to 300
) -> guesses
mf1 <- mifs_local[[1]]
library(iterators)
foreach(guess=iter(guesses,"row"), .combine=rbind,
.options.future=list(seed=1270401374)
) %dofuture% {
mf1 |>
mif2(params=c(guess,fixed_params)) |>
mif2(Nmif=100) -> mf
replicate(
10,
mf |> pfilter(Np=1500) |> logLik() # change Np from 5000 to 2000
) |>
logmeanexp(se=TRUE) -> ll
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# poor man's profile likelihood
all |>
filter(type=="result") |>
filter(loglik>max(loglik)-10) |>
ggplot(aes(x=eta,y=loglik))+
geom_point()+
labs(
x=expression(eta),
title="poor man’s profile likelihood"
)
results$Beta
results$eta
results$rho
guesses
all$type
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
read_csv("measles_params.csv")
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
read_csv("measles_params.csv")
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/hw07")
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
# running a particle filter
foreach(i=1:10,.combine=c,
.options.future=list(seed=TRUE)
) %dofuture% {
measSEIR |> pfilter(Np=5000)
} -> pf
pf |> logLik() |> logmeanexp(se=TRUE) -> L_pf
L_pf
pf[[1]] |> coef() |> bind_rows() |>
bind_cols(loglik=L_pf[1],loglik.se=L_pf[2]) |>
write_csv("measles_params.csv")
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# estimating the likelihood
foreach(mf=mifs_local,.combine=rbind,
.options.future=list(seed=900242057)
) %dofuture% {
evals <- replicate(10, logLik(pfilter(mf,Np=5000)))
ll <- logmeanexp(evals,se=TRUE)
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results_local
pairs(~loglik+Beta+eta+rho,data=results,pch=16)
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results_local) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
pf[[1]] |> coef() |> bind_rows() |>
bind_cols(loglik=L_pf[1],loglik.se=L_pf[2]) |>
write_csv("measles_params.csv")
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results_local) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
results_global <- results
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results_global) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
View(all)
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-100) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
read_csv("measles_params.csv")
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50)
read_csv("measles_params.csv") |>
bind_rows(guesses)
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
all
View(all)
read_csv("measles_params.csv")
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |>
bind_rows(guesses)
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |> all
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |>
bind_rows(guesses) -> all
View(all)
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
# show scatter plot matrix
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |>
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# poor man's profile likelihood
all |>
filter(type=="result") |>
filter(loglik>max(loglik)-10) |>
ggplot(aes(x=eta,y=loglik))+
geom_point()+
labs(
x=expression(eta),
title="poor man’s profile likelihood"
)
local_global <- read_csv("measles_params.csv")
local_global <- read_csv("measles_params.csv")
max(local_global$loglik)
local_global$loglik
local_global <- read_csv("measles_params.csv")
min(local_global$loglik)
local_global <- read_csv("measles_params.csv")
min(local_global$loglik[!is.na(local_global$loglik)])
local_global <- read_csv("measles_params.csv")
max(local_global$loglik[!is.na(local_global$loglik)])
local_global[which.max(local_global$loglik)]
local_global
which.max(local_global$loglik)
local_global[1,]
local_global[1,c("Beta","rho","eta")]
local_global <- read_csv("measles_params.csv")
max(local_global$loglik[!is.na(local_global$loglik)])
local_global[which.max(local_global$loglik),c("Beta","rho","eta")]
all[which.max(all$loglik),c("Beta","rho","eta")]
local_global[which.max(local_global$loglik),c("Beta","rho","eta")]
local_global[which.max(local_global$loglik),]
local_global[which.max(local_global$loglik),c("Beta","rho","eta")]
local_global <- read_csv("measles_params.csv")
local_global[which.max(local_global$loglik[!is.na(local_global$loglik)]), c("loglik","loglik.se")]
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-200) |> # can't not filt, otherwise no data
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-100) |> # can't not filt, otherwise no data
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# show scatter plot matrix
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-100000) |> # can't not filt, otherwise no data
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
# show scatter plot matrix
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-50) |> # can't not filt, otherwise no data
bind_rows(guesses) |>
mutate(type=if_else(is.na(loglik),"guess","result")) |>
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-20,loglik.se<2) |>
sapply(range) -> box
box
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-20,loglik.se<2) |>
sapply(range) -> box
box
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-20,loglik.se<2) |>
sapply(range) -> box
box
freeze(seed=1196696958,
profile_design(
eta=seq(0.01,0.95,length=40),
lower=box[1,c("Beta","rho")],
upper=box[2,c("Beta","rho")],
nprof=15, type="runif"
)) -> guesses
plot(guesses)
foreach(guess=iter(guesses,"row"), .combine=rbind,
.options.future=list(seed=830007657)
) %dofuture% {
mf1 |>
mif2(params=c(guess,fixed_params),
rw.sd=rw_sd(Beta=0.02,rho=0.02)) |>
mif2(Nmif=100,cooling.fraction.50=0.3) -> mf
replicate(
10,
mf |> pfilter(Np=1500) |> logLik()) |> # change Np from 5000 to 1500
logmeanexp(se=TRUE) -> ll
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results_profile
read_csv("measles_params.csv") |>
bind_rows(results_profile) |>
filter(is.finite(loglik)) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
read_csv("measles_params.csv") |>
bind_rows(results_profile) |>
filter(is.finite(loglik)) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
pf[[1]] |> coef() |> bind_rows() |>
bind_cols(loglik=L_pf[1],loglik.se=L_pf[2]) |>
write_csv("measles_params.csv")
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results_local) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
# build up a picture of the likelihood surface
read_csv("measles_params.csv") |>
bind_rows(results_global) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
read_csv("measles_params.csv") |>
bind_rows(results_profile) |>
filter(is.finite(loglik)) |>
arrange(-loglik) |>
write_csv("measles_params.csv")
read_csv("measles_params.csv") |>
filter(loglik>max(loglik)-10) -> all
pairs(~loglik+Beta+eta+rho,data=all,pch=16)
results_profile |>
filter(is.finite(loglik)) |>
group_by(round(eta,5)) |>
filter(rank(-loglik)<3) |>
ungroup() |>
filter(loglik>max(loglik)-20) |>
ggplot(aes(x=eta,y=loglik))+
geom_point()
results_profile |>
filter(is.finite(loglik)) |>
group_by(round(rho,5)) |>
filter(rank(-loglik)<3) |>
ungroup() |>
filter(loglik>max(loglik)-20) |>
ggplot(aes(x=rho,y=loglik))+
geom_point()
read_csv("measles_params.csv") |>
#filter(loglik>max(loglik)-20,loglik.se<2) |>
sapply(range) -> box
box
freeze(seed=1196696958,
profile_design(
rho=seq(0.01,0.95,length=40),
lower=box[1,c("Beta","eta")],
upper=box[2,c("Beta","eta")],
nprof=15, type="runif"
)) -> guesses
plot(guesses)
foreach(guess=iter(guesses,"row"), .combine=rbind,
.options.future=list(seed=830007657)
) %dofuture% {
mf1 |>
mif2(params=c(guess,fixed_params),
rw.sd=rw_sd(Beta=0.02,eta=0.02)) |>
mif2(Nmif=100,cooling.fraction.50=0.3) -> mf
replicate(
10,
mf |> pfilter(Np=1500) |> logLik()) |> # change Np from 5000 to 1500
logmeanexp(se=TRUE) -> ll
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results_profile
rm(result_porfile)
rm(result_profile)
rm(results_profile)
foreach(guess=iter(guesses,"row"), .combine=rbind,
.options.future=list(seed=830007657)
) %dofuture% {
mf1 |>
mif2(params=c(guess,fixed_params),
rw.sd=rw_sd(Beta=0.02,eta=0.02)) |>
mif2(Nmif=100,cooling.fraction.50=0.3) -> mf
replicate(
10,
mf |> pfilter(Np=1500) |> logLik()) |> # change Np from 5000 to 1500
logmeanexp(se=TRUE) -> ll
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results_profile
foreach(guess=iter(guesses,"row"), .combine=rbind,
.options.future=list(seed=830007657)
) %dofuture% {
mf1 |>
mif2(params=c(guess,fixed_params),
rw.sd=rw_sd(Beta=0.02,eta=0.02)) |>
mif2(Nmif=30,cooling.fraction.50=0.3) -> mf # change Nmif from 100 to 30
replicate(
10,
mf |> pfilter(Np=1000) |> logLik()) |> # change Np from 5000 to 1000
logmeanexp(se=TRUE) -> ll
mf |> coef() |> bind_rows() |>
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results_profile
