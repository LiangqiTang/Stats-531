sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=11,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=11,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=15,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=15,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=9,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=9.5,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=10,mu_IR=9.5,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=2,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=2,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.4,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.4,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.4,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.45,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.45,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.45,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.45,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=1.5,mu_IR=1.45,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# step function: E is similar to the component I, add E in the chain
seir_step <- Csnippet("
double dN_SE = rbinom(S,1-exp(-Beta*I/N*dt));
double dN_EI = rbinom(E,1-exp(-mu_EI*dt));
double dN_IR = rbinom(I,1-exp(-mu_IR*dt));
S -= dN_SE;
E += dN_SE - dN_EI;
I += dN_EI - dN_IR;
R += dN_IR;
H += dN_IR;
")
# initial function: suppose we do not no the latent value of E at first.
seir_rinit <- Csnippet("
S = nearbyint(eta*N);
E = 0;
I = 1;
R = nearbyint((1-eta)*N);
H = 0;
")
# dmeasure component
seir_dmeas <- Csnippet("
lik = dnbinom_mu(reports,k,rho*H,give_log);
")
# rmeasure component
seir_rmeas <- Csnippet("
reports = rnbinom_mu(k,rho*H);
")
# add components to pomp model: clarify E and mu_EI
meas |>
pomp(times="week",t0=0,
rprocess=euler(seir_step,delta.t=1/7),
rinit=seir_rinit,
rmeasure=seir_rmeas,
dmeasure=seir_dmeas,
accumvars="H",
statenames=c("S","E","I","R","H"),
paramnames=c("Beta","mu_EI","mu_IR","N","eta","rho","k")
) -> measSEIR
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1.3,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1.3,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1.3,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=0.8,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=0.8,rho=0.5,k=10,
eta=0.06,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=0.8,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=0.8,rho=0.5,k=10,
eta=0.03,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=0.8,rho=0.5,k=10,
eta=0.05,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=0.8,rho=0.5,k=10,
eta=0.05,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.05,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.05,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.05,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
# generate simulations based on the parameter values we choose:
measSEIR |>
simulate(
params=c(Beta=30,mu_EI=0.8,mu_IR=1,rho=0.5,k=10,
eta=0.05,N=38000),
nsim=20,format="data.frame",include.data=TRUE
) -> sims
# plot the simulations
sims |>
ggplot(aes(x=week,y=reports,group=.id,color=.id=="data"))+
geom_line()+
guides(color="none")+
ggtitle("Simulations of SEIR")
library(doParallel)
cores <-  as.numeric(Sys.getenv('SLURM_NTASKS_PER_NODE', unset=NA))
if(is.na(cores)) cores <- detectCores()
registerDoParallel(cores)
system.time(
rnorm(10^8)
) -> time0
system.time(
foreach(i=1:10) %dopar% rnorm(10^7)
) -> time1
system.time(
foreach(i=1:10^2) %dopar% rnorm(10^6)
) -> time2
system.time(
foreach(i=1:10^3) %dopar% rnorm(10^5)
) -> time3
system.time(
foreach(i=1:10^4) %dopar% rnorm(10^4)
) -> time4
write.table(file="test.csv",
rbind(time0,time1,time2,time3,time4))
time1 <= read.csv("test.csv")
time1 <= read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/test.csv")
time1 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/test.csv")
time1 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/test.csv", sep = " ")
time1 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/test.csv", sep = " ")
kable(temp_aic_table,digits=2)
library(kable)
library(knitr)
time1 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/test.csv", sep = " ")
kable(temp_aic_table,digits=2)
require(knitr)
time1 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/test.csv", sep = " ")
kable(time1)
time1
require(knitr)
time1 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/greatlakes/test_local.csv", sep = " ")
kable(time1)
time2 <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/531/Stats531/greatlakes/test_remote.csv", sep = " ")
kable(time2)
